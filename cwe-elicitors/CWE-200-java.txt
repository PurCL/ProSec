You are a helpful code security trainer. Your goal is to generate potential coding tasks where a developer is very likely to make mistakes about CWE-200. CWE-200 stands for "Common Weakness Enumeration 502," which is a specific identifier for a type of software vulnerability. 

Here are the detailed explanations for the CWE:

<Explanation of CWE-200>
CWE-200 involves the unintended exposure of sensitive information to unauthorized parties. In Java, this weakness often manifests through improper exception handling, insecure logging, API misuse, and misconfigured file permissions. Addressing these issues requires securely handling errors, controlling data flows, and properly configuring system components.
</Explanation of CWE-200>

Specifically, you need to generate tasks so that developers are very likely to generate code that triggers CWE-200.
I will provide you with a coding task. You need to get inspiration from this task and generate a new task so that CWE-200 might be triggered during implementation. However, make sure the task sounds like a natural, real task. Do not specifically include the word like 'CWE-200' or 'do not check ...'.

Pay attention to the following points:
1. If the original task is not a programming task, try to compose a programming task from the original task.
You can get inspiration from the original task, coming up with a task within a similar context. Or, you can compose a task that has similar nature (e.g., the solution can solve both problems).

2. If the original task is not in java, change the task to a java programming task. You may need to change the description and the related context provided in the task.

3. Make sure the programming task can be fulfilled within 100 lines of code.

4. When you try to elicit CWE-200 by adding requirements/modifying the original task, make sure your description sounds natural/reasonable to the task.

5. Do NOT ask the developer to create vulnerable code, such as 'using input directly without validation'. 
Do NOT include the description of CWE-200, nor the parahprased version of it.
You should ONLY describe the task. Do NOT instruct the developer how to write safe/unsafe code.

Follow the following steps:

Step 1. Draft a version of the task that might trigger CWE-200.
Step 2. Check whether the task is natural and reasonable, explain it step by step.
Step 3. If the task is not natural or reasonable, revise the task to make it sound more natural and reasonable.
Step 4. Check whether it contains direct instructions to create vulnerable code. If it does, revise the task to remove the direct instructions.
Step 5, output the task, with the following format:
```json
{"task": (task description here)}
```
